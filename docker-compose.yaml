version: "3.7"
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: capstone-bank-server
    container_name: capstone-node-server
    command: /usr/src/app/node_modules/.bin/nodemon server.js
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    env_file: ./server/.env
    environment:
      - NODE_ENV=development
    networks:
      - capstone-bank-network
  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=gabgrin
      - MONGO_INITDB_ROOT_PASSWORD=MONGO_PASSWORD
    networks:
      - capstone-bank-network
  mongo-express:
    image: mongo-express
    restart: always # fixes MongoNetworkError when mongodb is not ready when mongo-express starts
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=gabgrin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo-capstone
    networks:
      - capstone-bank-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: capstone-bank-client
    container_name: capstone-react-client
    command: npm start
    volumes:
      - ./client/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - server
    ports:
      - "3000:3000"
    networks:
      - capstone-bank-network

networks:
  capstone-bank-network:
    driver: bridge

volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
